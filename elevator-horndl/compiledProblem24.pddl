(define (problem elevators_problem)
(:domain elevators)
(:init
       (origin pass_x g)
       (destin pass_x f)
       (origin pass_i f)
       (destin pass_i t)
       (origin pass_r m)
       (destin pass_r j)
       (origin pass_l a)
       (destin pass_l j)
       (origin pass_b p)
       (destin pass_b m)
       (origin pass_s e)
       (destin pass_s e)
       (origin pass_n u)
       (destin pass_n o)
       (origin pass_c g)
       (destin pass_c f)
       (origin pass_q g)
       (destin pass_q d)
       (next a d)
       (next d e)
       (next e f)
       (next f g)
       (next g h)
       (next h j)
       (next j k)
       (next k m)
       (next m o)
       (next o p)
       (next p t)
       (next t u)
       (next u v)
       (next v w)
       (liftat p))
(:goal (and (forall (?x - object) (AUX2 ?x)) (not (DATALOG_INCONSISTENT))))
)