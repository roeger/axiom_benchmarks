(define (domain drone)
(:requirements :adl :derived-predicates)
(:constants
  aa ab ac ad ae af ag ba bb bc bd be bf bg ca cb cc cd ce cf cg da db dc dd de df dg ea eb ec ed ee ef eg fa fb fc fd fe ff fg ga gb gc gd ge gf gg env)
(:predicates
  (environment ?x ?y)
  (rain ?x)
  (drone ?x)
  (wetdrone ?x)
  (lowvisibility ?x)
  (near ?x ?y)
  (veryclose ?x ?y)
  (human ?x)
  (movingobject ?x)
  (objectx ?x)
  (riskofphysicaldamage ?x)
  (tree ?x)
  (DATALOG_NEAR ?x0 ?x1)
  (DATALOG_DRONE ?x0)
  (DATALOG_OBJECTX ?x0)
  (DATALOG_QUERY0 ?x0 ?x1)
  (DATALOG_VERYCLOSE ?x0 ?x1)
  (DATALOG_QUERY1)
  (DATALOG_MOVINGOBJECT ?x0)
  (DATALOG_RISKOFPHYSICALDAMAGE ?x0)
  (DATALOG_ENVIRONMENTSOMELOWVISIBILITY ?x0)
  (DATALOG_INCONSISTENT)
  (DATALOG_VERYCLOSESOMEOBJECTX ?x0)
  (DATALOG_LOWVISIBILITY ?x0)
  (DATALOG_NEARSOMEOBJECTX ?x0)
  (DATALOG_NEARSOMEMOVINGOBJECT ?x0)
  (AUX0 ?y1 ?y0)
  (AUX1 ?x0 ?y0)
  (AUX2 ?x0 ?y0)
  (AUX3 ?x0 ?y0)
  (AUX4 ?x0)
  (AUX5 ?x0)
  (AUX6 ?x0)
  (AUX7 ?x0 ?y0)
  (AUX8 ?y0)
  (AUX9 ?y0))
(:derived (DATALOG_QUERY0 ?x0 ?x1)
          (and (DATALOG_DRONE ?x0) (DATALOG_VERYCLOSE ?x0 ?x1)))
(:derived (DATALOG_QUERY1)
          (exists (?y0 ?y1) (AUX0 ?y1 ?y0)))
(:derived (DATALOG_VERYCLOSESOMEOBJECTX ?x0)
          (exists (?y0) (AUX1 ?x0 ?y0)))
(:derived (DATALOG_NEARSOMEOBJECTX ?x0)
          (exists (?y0) (AUX2 ?x0 ?y0)))
(:derived (DATALOG_NEARSOMEMOVINGOBJECT ?x0)
          (exists (?y0) (AUX3 ?x0 ?y0)))
(:derived (DATALOG_NEAR ?x0 ?x1)
          (or (DATALOG_NEAR ?x1 ?x0) (DATALOG_VERYCLOSE ?x0 ?x1) (near ?x0 ?x1)))
(:derived (DATALOG_DRONE ?x0)
          (or (drone ?x0) (wetdrone ?x0)))
(:derived (DATALOG_OBJECTX ?x0)
          (or (DATALOG_MOVINGOBJECT ?x0) (objectx ?x0) (tree ?x0)))
(:derived (DATALOG_VERYCLOSE ?x0 ?x1)
          (or (DATALOG_VERYCLOSE ?x1 ?x0) (veryclose ?x0 ?x1)))
(:derived (DATALOG_MOVINGOBJECT ?x0)
          (or (DATALOG_DRONE ?x0) (human ?x0) (movingobject ?x0)))
(:derived (DATALOG_RISKOFPHYSICALDAMAGE ?x0)
          (or (AUX4 ?x0) (AUX5 ?x0) (AUX6 ?x0) (riskofphysicaldamage ?x0)))
(:derived (DATALOG_ENVIRONMENTSOMELOWVISIBILITY ?x0)
          (or (exists (?y0) (AUX7 ?x0 ?y0)) (wetdrone ?x0)))
(:derived (DATALOG_INCONSISTENT)
          (or (exists (?y0) (AUX8 ?y0)) (exists (?y0) (AUX9 ?y0))))
(:derived (DATALOG_LOWVISIBILITY ?x0)
          (or (lowvisibility ?x0) (rain ?x0)))
(:derived (AUX0 ?y1 ?y0)
          (and (DATALOG_NEAR ?y0 ?y1) (DATALOG_RISKOFPHYSICALDAMAGE ?y0) (DATALOG_RISKOFPHYSICALDAMAGE ?y1)))
(:derived (AUX1 ?x0 ?y0)
          (and (DATALOG_OBJECTX ?y0) (DATALOG_VERYCLOSE ?x0 ?y0)))
(:derived (AUX2 ?x0 ?y0)
          (and (DATALOG_NEAR ?x0 ?y0) (DATALOG_OBJECTX ?y0)))
(:derived (AUX3 ?x0 ?y0)
          (and (DATALOG_MOVINGOBJECT ?y0) (DATALOG_NEAR ?x0 ?y0)))
(:derived (AUX4 ?x0)
          (and (DATALOG_DRONE ?x0) (DATALOG_VERYCLOSESOMEOBJECTX ?x0)))
(:derived (AUX5 ?x0)
          (and (DATALOG_DRONE ?x0) (DATALOG_NEARSOMEMOVINGOBJECT ?x0)))
(:derived (AUX6 ?x0)
          (and (DATALOG_DRONE ?x0) (DATALOG_ENVIRONMENTSOMELOWVISIBILITY ?x0) (DATALOG_NEARSOMEOBJECTX ?x0)))
(:derived (AUX7 ?x0 ?y0)
          (and (DATALOG_LOWVISIBILITY ?y0) (environment ?x0 ?y0)))
(:derived (AUX8 ?y0)
          (and (DATALOG_DRONE ?y0) (human ?y0)))
(:derived (AUX9 ?y0)
          (and (DATALOG_OBJECTX ?y0) (rain ?y0)))
(:action Move
  :parameters (?x ?y)
  :precondition (and (DATALOG_QUERY0 ?x ?y) (not (DATALOG_OBJECTX ?y)) (not (DATALOG_INCONSISTENT)))
  :effect (and (when (not (wetdrone ?x)) (and (not (drone ?x)) (drone ?y))) (when (wetdrone ?x) (and (not (wetdrone ?x)) (not (drone ?x)) (wetdrone ?y)))))
)